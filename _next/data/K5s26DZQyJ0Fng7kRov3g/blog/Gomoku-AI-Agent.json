{"pageProps":{"post":{"date":"2021-09-01T11:50:54.000Z","slug":"Gomoku-AI-Agent","preview":"Using Minimax, Monte Carlo Tree Search, and reinforcement learning, design and implement an AI agent for Gomoku (Five in a Row)","title":"Gomoku AI Agent","tagline":"Reinforcement Learning","image":"https://images.unsplash.com/photo-1640017955477-75b58521007d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1332&q=80","content":"\n- 2021.09-2021.12\n- Final Project for Artificial Intelligence\n- Background: The goal is to implement an artificial intelligence agent playing Gomoku (Five in a Row) as good as possible. The game is simulated based on Python Piskvork Gomoku Manager for [Gomocup AI Tournament](https://gomocup.org/).\n- Implementation: Use three different algorithms as follows.\n  - Minimax with Alpha-Beta Pruning\n  - Monte Carlo Tree Search\n  - Reinforcement Learning (Specifically, two shallow neural network for evaluation and action prediction respectively and was trained with self-teaching.)\n- Code: *Feel free to contact me.*"}},"__N_SSG":true}